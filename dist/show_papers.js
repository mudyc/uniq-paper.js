// Generated by CoffeeScript 1.9.1
var main, setRectangle;

setRectangle = function(gl, x, y, width, height) {
  var x1, x2, y1, y2;
  x1 = x;
  x2 = x + width;
  y1 = y;
  y2 = y + height;
  return gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2]), gl.STATIC_DRAW);
};

main = function() {
  var canvas, colors, gl, h, i, idx, j, len, nt, ref, results, rootrep0, rootrep1, sh, t, trans, w, x, y;
  canvas = document.getElementById("canvas");
  gl = canvas.getContext("experimental-webgl");
  nt = new NamedTextures(gl);
  sh = new Shader(gl);
  x = y = 0;
  w = h = 300;
  idx = 0;
  results = [];
  for (t = i = 0; i <= 10; t = ++i) {
    colors = new Colors(gl, Math.random());
    ref = [0, 0.5, 0.95];
    for (j = 0, len = ref.length; j < len; j++) {
      trans = ref[j];
      rootrep0 = new TexGenXYRepeatUnit().getRelated().texCoords2D();
      rootrep1 = new TexGenXYRepeatUnit().getRelated().texCoords2D();
      sh.setup(gl, Math.floor(Math.random() * 3), {
        tex0: nt.get_random_tex(),
        tex1: nt.get_random_tex(),
        coords0: rootrep0,
        coords1: rootrep1,
        u_resolution: {
          width: canvas.width,
          height: canvas.height
        },
        c0: colors.get_color(0),
        c1: colors.get_color(1),
        c2: colors.get_color(2),
        r0: colors.get_rand(0),
        r1: colors.get_rand(1),
        trans: trans
      });
      setRectangle(gl, x, y, w, h);
      gl.enable(gl.BLEND);
      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
      gl.blendEquation(gl.FUNC_ADD);
      gl.disable(gl.DEPTH_TEST);
      gl.drawArrays(gl.TRIANGLES, 0, 6);
    }
    x += w;
    idx += 1;
    if (idx % 5 === 0) {
      y += h;
      results.push(x = 0);
    } else {
      results.push(void 0);
    }
  }
  return results;
};

window.onload = main;
