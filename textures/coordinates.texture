/*
coordinates.texture
 *    
 *    Copyright (c) 2003, Tuomas j. Lukka
 *    This file is part of Libvob.
 *    
 *    Libvob is free software; you can redistribute it and/or modify it under
 *    the terms of the GNU General Public License as published by
 *    the Free Software Foundation; either version 2 of the License, or
 *    (at your option) any later version.
 *    
 *    Libvob is distributed in the hope that it will be useful, but WITHOUT
 *    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 *    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 *    Public License for more details.
 *    
 *    You should have received a copy of the GNU General
 *    Public License along with Libvob; if not, write to the Free
 *    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *    
 */
/*
 * Written by Tuomas j. Lukka
 */

#define FPARAM(name, default) float name = params->getFloat(#name, default);

int tick(float ticks, float thick, int i, int size) {
    int x = i % (int)(size / ticks);
    return x < thick;
}

void GENERATE(TextureParam *params, int width, int height, int depth, int components, float *data) {
    FPARAM(type, 0);
    FPARAM(ticks, 5);
    FPARAM(thickness, 2);

    int i, j;
    float x, y;
    float xstep = 1.0 / width;
    float ystep = 1.0 / height;
    int ind = 0;

    if(type == 0 && components != 3) 
	return;

    for (j = 0, y = 0; j < height; j++, y += ystep) {	
      int ytick = tick(ticks, thickness, j, height);
      for (i = 0, x = 0; i < width; i++, x += xstep) {
	switch((int)type) {
	    case 0: // graph paper
		int xtick = tick(ticks, thickness, i, width);
		data[ind] = (!ytick);
		data[ind+1] = (!xtick);
		data[ind+2] = ((!ytick) && (!xtick));
		break;
	}
	ind += components;
      }
    }

}
